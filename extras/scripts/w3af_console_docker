#!/usr/bin/env python

import subprocess
import json
import sys
import os

ROOT_PATH = os.path.dirname(os.path.realpath(__file__))
DOCKER_RUN = 'docker run -d --name w3af -v ~/.w3af:/home/w3af/.w3af -v ~/w3af-shared:/home/w3af/w3af-shared andresriancho/w3af'


def start_container():
    '''
    Start a new w3af container so we can connect using SSH and run w3af
    '''
    print('Starting a new container with w3af...')
    try:
        subprocess.check_output(DOCKER_RUN, shell=True)
    except subprocess.CalledProcessError, cpe:
        print('w3af container failed to start: "%s"' % cpe)
        sys.exit(1)


def create_volumes():
    '''
    Create the directories if they don't exist
    '''
    w3af_home = os.path.expanduser('~/.w3af')
    w3af_shared = os.path.expanduser('~/w3af-shared')

    if not os.path.exists(w3af_home):
        os.mkdir(w3af_home)

    if not os.path.exists(w3af_shared):
        os.mkdir(w3af_shared)


def connect_to_container():
    '''
    Connect to a running container, start one if not running.
    '''
    try:
        stdout = subprocess.check_output('docker inspect w3af', shell=True)
    except subprocess.CalledProcessError:
        start_container()
        connect_to_container()
    else:
        ip_address = json.loads(stdout)[0]['NetworkSettings']['IPAddress']
        ssh_key = os.path.join(ROOT_PATH, 'w3af-docker.prv')
        subprocess.call(['ssh', '-i', ssh_key, '-t', '-t', '-X',
                         'root@' + ip_address,
                         '/home/w3af/w3af/w3af_console'])


if __name__ == '__main__':
    # if not root...kick out
    if not os.geteuid() == 0:
        sys.exit('Only root can run this script')

    create_volumes()
    connect_to_container()